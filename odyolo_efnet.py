# -*- coding: utf-8 -*-
"""ODYOLO_EFNET.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KhUj6JuMIJA_BaCIfepN3tNHBJSthcJg
"""

from google.colab import drive
drive.mount('/content/drive')

# Step 1: Install Required Libraries
!pip install ultralytics timm

"""**TRAINING PHASE USING YOLO8 with modified backbone Efficient Net**"""

# Step 2: Import Libraries
import torch
import torch.nn as nn
from timm import create_model
from ultralytics import YOLO

# Step 3: Define the Custom Backbone (EfficientNet)
class EfficientNetBackbone(nn.Module):
    def __init__(self, pretrained=True):
        super(EfficientNetBackbone, self).__init__()
        # Load pretrained EfficientNet

        self.efficientnet = create_model('efficientnet_b0', pretrained=pretrained)

        # Remove classification head
        self.efficientnet.classifier = nn.Identity()

    def forward(self, x):
        x = self.efficientnet(x)
        return x

# Step 4: Modify YOLOv8 Model to Use Custom Backbone
class CustomYOLO(YOLO):
    def __init__(self, config='yolov8n.yaml'):
        super(CustomYOLO, self).__init__()
        # Load YOLO model
        self.model = YOLO(config).model
        # Replace the default backbone with EfficientNet
        self.model.backbone = EfficientNetBackbone(pretrained=False)

    def forward(self, x):
        return self.model(x)

# Step 5: Initialize the Model
custom_model = CustomYOLO()

# Step 6: Train the Model on Thermal Images
# Create your dataset YAML file (e.g., 'thermal_data.yaml') specifying train, val, and class info
custom_model.train(data='/content/drive/MyDrive/yolo8/Survelliance/data.yaml', epochs=150, imgsz=256, batch=16, lr0 = 0.005, iou = 0.6)

# Step 7: Evaluate and Test the Model
metrics = custom_model.val()  # Evaluate the model on validation data
#print(metrics)

# Test the model on a custom image
results = custom_model('/content/drive/MyDrive/yolo8/Survelliance/test/images/000317.jpg')

# Visualize results
for result in results:
    result.show()

from ultralytics import YOLO
from IPython.display import display
from PIL import Image


model = YOLO("/content/runs/detect/train4/weights/best.pt")  # Load trained model

# Run inference on an image
results = model("/content/drive/MyDrive/yolo8/Survelliance/test/images/008375.jpg", save=True)

import shutil

# Copy the directory

shutil.copytree('/content/runs', '/content/drive/MyDrive/yolo8/Survelliance', dirs_exist_ok=True)